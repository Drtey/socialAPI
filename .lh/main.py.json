{
    "sourceFile": "main.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 53,
            "patches": [
                {
                    "date": 1663018813305,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1663019194161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n from typing import Optional\r\n from fastapi import FastAPI\r\n from fastapi.params import Body\r\n from pydantic import BaseModel\r\n+from random import randrange\r\n \r\n app = FastAPI()\r\n \r\n \r\n"
                },
                {
                    "date": 1663019252413,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,7 +26,9 @@\n     return {\"data\": my_posts}\r\n \r\n @app.post(\"/cpost\")\r\n def cpost(post: Post):\r\n-    print(post.dict())\r\n+    post_dict = post.dict()\r\n+    post_dict['id'] = randrange(0, 10000000)\r\n+    #print(post.dict())\r\n     return {\"data\": post}\r\n # title str, content str, category, Bool published\n\\ No newline at end of file\n"
                },
                {
                    "date": 1663019261247,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,7 +28,8 @@\n @app.post(\"/cpost\")\r\n def cpost(post: Post):\r\n     post_dict = post.dict()\r\n     post_dict['id'] = randrange(0, 10000000)\r\n+    my_posts.append()\r\n     #print(post.dict())\r\n     return {\"data\": post}\r\n # title str, content str, category, Bool published\n\\ No newline at end of file\n"
                },
                {
                    "date": 1663019267622,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,6 +30,6 @@\n     post_dict = post.dict()\r\n     post_dict['id'] = randrange(0, 10000000)\r\n     my_posts.append()\r\n     #print(post.dict())\r\n-    return {\"data\": post}\r\n+    return {\"data\": post_dict}\r\n # title str, content str, category, Bool published\n\\ No newline at end of file\n"
                },
                {
                    "date": 1663023113663,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,8 +28,8 @@\n @app.post(\"/cpost\")\r\n def cpost(post: Post):\r\n     post_dict = post.dict()\r\n     post_dict['id'] = randrange(0, 10000000)\r\n-    my_posts.append()\r\n+    my_posts.append(post_dict)\r\n     #print(post.dict())\r\n     return {\"data\": post_dict}\r\n # title str, content str, category, Bool published\n\\ No newline at end of file\n"
                },
                {
                    "date": 1663023194212,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n @app.get(\"/posts\")\r\n async def root():\r\n     return {\"data\": my_posts}\r\n \r\n-@app.post(\"/cpost\")\r\n+@app.post(\"/posts\")\r\n def cpost(post: Post):\r\n     post_dict = post.dict()\r\n     post_dict['id'] = randrange(0, 10000000)\r\n     my_posts.append(post_dict)\r\n"
                },
                {
                    "date": 1663026205135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n async def root():\r\n     return {\"message\": \"Python API\"}\r\n \r\n @app.get(\"/posts\")\r\n-async def root():\r\n+async def get_posts():\r\n     return {\"data\": my_posts}\r\n \r\n @app.post(\"/posts\")\r\n def cpost(post: Post):\r\n@@ -31,5 +31,8 @@\n     post_dict['id'] = randrange(0, 10000000)\r\n     my_posts.append(post_dict)\r\n     #print(post.dict())\r\n     return {\"data\": post_dict}\r\n-# title str, content str, category, Bool published\n\\ No newline at end of file\n+# title str, content str, category, Bool published\r\n+\r\n+@app.get(\"/posts/{id}\")\r\n+def get\n\\ No newline at end of file\n"
                },
                {
                    "date": 1663026225139,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,5 +34,6 @@\n     return {\"data\": post_dict}\r\n # title str, content str, category, Bool published\r\n \r\n @app.get(\"/posts/{id}\")\r\n-def get\n\\ No newline at end of file\n+def get_post(id)\r\n+    print(id)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1663026278521,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,6 +34,7 @@\n     return {\"data\": post_dict}\r\n # title str, content str, category, Bool published\r\n \r\n @app.get(\"/posts/{id}\")\r\n-def get_post(id)\r\n-    print(id)\n\\ No newline at end of file\n+def get_post(id):\r\n+    print(id)\r\n+    return {\"post_detail\": f\"Here is post {id}\"}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1663026430598,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,13 @@\n \r\n my_posts = [{\"title\": \"title of post 1\", \"content\": \"content of post 1\", \"id\" : 1}, {\r\n \"title\": \"favorite foods\", \"content\": \"I like pizza\" , \"id\": 2}]\r\n \r\n+def find_post(id):\r\n+    for p in my_posts:\r\n+        if p[\"id\"] == id:\r\n+            return p\r\n+\r\n @app.get(\"/\")\r\n async def root():\r\n     return {\"message\": \"Python API\"}\r\n \r\n"
                },
                {
                    "date": 1663026452083,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,6 +40,6 @@\n # title str, content str, category, Bool published\r\n \r\n @app.get(\"/posts/{id}\")\r\n def get_post(id):\r\n-    print(id)\r\n+    post = find_post(id)\r\n     return {\"post_detail\": f\"Here is post {id}\"}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1663026462486,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,5 +41,5 @@\n \r\n @app.get(\"/posts/{id}\")\r\n def get_post(id):\r\n     post = find_post(id)\r\n-    return {\"post_detail\": f\"Here is post {id}\"}\n\\ No newline at end of file\n+    return {\"post_detail\": post}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1663026484224,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,5 +41,6 @@\n \r\n @app.get(\"/posts/{id}\")\r\n def get_post(id):\r\n     post = find_post(id)\r\n+    print(post)\r\n     return {\"post_detail\": post}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1663026490598,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,7 +40,8 @@\n # title str, content str, category, Bool published\r\n \r\n @app.get(\"/posts/{id}\")\r\n def get_post(id):\r\n+    print(id)\r\n     post = find_post(id)\r\n     print(post)\r\n     return {\"post_detail\": post}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1663026511297,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n     return {\"data\": post_dict}\r\n # title str, content str, category, Bool published\r\n \r\n @app.get(\"/posts/{id}\")\r\n-def get_post(id):\r\n+def get_post(type(id)):\r\n     print(id)\r\n     post = find_post(id)\r\n     print(post)\r\n     return {\"post_detail\": post}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1663026528550,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n     return {\"data\": post_dict}\r\n # title str, content str, category, Bool published\r\n \r\n @app.get(\"/posts/{id}\")\r\n-def get_post(type(id)):\r\n-    print(id)\r\n+def get_post(id):\r\n+    print(type(id))\r\n     post = find_post(id)\r\n     print(post)\r\n     return {\"post_detail\": post}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1663026550183,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,7 +41,7 @@\n \r\n @app.get(\"/posts/{id}\")\r\n def get_post(id):\r\n     print(type(id))\r\n-    post = find_post(id)\r\n+    post = find_post(int(id))\r\n     print(post)\r\n     return {\"post_detail\": post}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1663026605914,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,8 @@\n     return {\"data\": post_dict}\r\n # title str, content str, category, Bool published\r\n \r\n @app.get(\"/posts/{id}\")\r\n-def get_post(id):\r\n-    print(type(id))\r\n-    post = find_post(int(id))\r\n+def get_post(id:int):\r\n+    post = find_post(id)\r\n     print(post)\r\n     return {\"post_detail\": post}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1663026671622,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,5 +42,8 @@\n @app.get(\"/posts/{id}\")\r\n def get_post(id:int):\r\n     post = find_post(id)\r\n     print(post)\r\n-    return {\"post_detail\": post}\n\\ No newline at end of file\n+    return {\"post_detail\": post}\r\n+\r\n+@app.get(\"/posts/latest\")\r\n+def get_latest_post():\n\\ No newline at end of file\n"
                },
                {
                    "date": 1663026715520,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,5 +45,7 @@\n     print(post)\r\n     return {\"post_detail\": post}\r\n \r\n @app.get(\"/posts/latest\")\r\n-def get_latest_post():\n\\ No newline at end of file\n+def get_latest_post():\r\n+    post = my_posts[len(my_posts)-1]\r\n+    return {\"detail\": post}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1663026797206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,12 +25,14 @@\n @app.get(\"/\")\r\n async def root():\r\n     return {\"message\": \"Python API\"}\r\n \r\n+\r\n @app.get(\"/posts\")\r\n async def get_posts():\r\n     return {\"data\": my_posts}\r\n \r\n+\r\n @app.post(\"/posts\")\r\n def cpost(post: Post):\r\n     post_dict = post.dict()\r\n     post_dict['id'] = randrange(0, 10000000)\r\n@@ -38,14 +40,16 @@\n     #print(post.dict())\r\n     return {\"data\": post_dict}\r\n # title str, content str, category, Bool published\r\n \r\n+\r\n @app.get(\"/posts/{id}\")\r\n def get_post(id:int):\r\n     post = find_post(id)\r\n     print(post)\r\n     return {\"post_detail\": post}\r\n \r\n+\r\n @app.get(\"/posts/latest\")\r\n def get_latest_post():\r\n     post = my_posts[len(my_posts)-1]\r\n     return {\"detail\": post}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1663026849955,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,15 +41,15 @@\n     return {\"data\": post_dict}\r\n # title str, content str, category, Bool published\r\n \r\n \r\n+@app.get(\"/posts/latest\")\r\n+def get_latest_post():\r\n+    post = my_posts[len(my_posts)-1]\r\n+    return {\"detail\": post}\r\n+\r\n+\r\n @app.get(\"/posts/{id}\")\r\n def get_post(id:int):\r\n     post = find_post(id)\r\n     print(post)\r\n     return {\"post_detail\": post}\r\n\\ No newline at end of file\n-\r\n-\r\n-@app.get(\"/posts/latest\")\r\n-def get_latest_post():\r\n-    post = my_posts[len(my_posts)-1]\r\n-    return {\"detail\": post}\n"
                },
                {
                    "date": 1663026863826,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,12 +16,14 @@\n \r\n my_posts = [{\"title\": \"title of post 1\", \"content\": \"content of post 1\", \"id\" : 1}, {\r\n \"title\": \"favorite foods\", \"content\": \"I like pizza\" , \"id\": 2}]\r\n \r\n+\r\n def find_post(id):\r\n     for p in my_posts:\r\n         if p[\"id\"] == id:\r\n             return p\r\n+        \r\n \r\n @app.get(\"/\")\r\n async def root():\r\n     return {\"message\": \"Python API\"}\r\n@@ -51,5 +53,5 @@\n @app.get(\"/posts/{id}\")\r\n def get_post(id:int):\r\n     post = find_post(id)\r\n     print(post)\r\n-    return {\"post_detail\": post}\n\\ No newline at end of file\n+    return {\"post_detail\": post}\r\n"
                },
                {
                    "date": 1663026913253,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,8 +50,8 @@\n     return {\"detail\": post}\r\n \r\n \r\n @app.get(\"/posts/{id}\")\r\n-def get_post(id:int):\r\n+def get_post(id:int, repsonse: Response):\r\n     post = find_post(id)\r\n     print(post)\r\n     return {\"post_detail\": post}\r\n"
                },
                {
                    "date": 1663026931455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n from typing import Optional\r\n-from fastapi import FastAPI\r\n+from fastapi import FastAPI, Response\r\n from fastapi.params import Body\r\n from pydantic import BaseModel\r\n from random import randrange\r\n \r\n"
                },
                {
                    "date": 1663026967652,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,6 +52,7 @@\n \r\n @app.get(\"/posts/{id}\")\r\n def get_post(id:int, repsonse: Response):\r\n     post = find_post(id)\r\n-    print(post)\r\n+    if not post: \r\n+        response.status_code = 404\r\n     return {\"post_detail\": post}\r\n"
                },
                {
                    "date": 1663026975094,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n     return {\"detail\": post}\r\n \r\n \r\n @app.get(\"/posts/{id}\")\r\n-def get_post(id:int, repsonse: Response):\r\n+def get_post(id:int, response: Response):\r\n     post = find_post(id)\r\n     if not post: \r\n         response.status_code = 404\r\n     return {\"post_detail\": post}\r\n"
                },
                {
                    "date": 1663027140888,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n from typing import Optional\r\n-from fastapi import FastAPI, Response\r\n+from fastapi import FastAPI, Response, status\r\n from fastapi.params import Body\r\n from pydantic import BaseModel\r\n from random import randrange\r\n \r\n@@ -53,6 +53,6 @@\n @app.get(\"/posts/{id}\")\r\n def get_post(id:int, response: Response):\r\n     post = find_post(id)\r\n     if not post: \r\n-        response.status_code = 404\r\n+        response.status_code = status.HTTP_404_NOT_FOUND\r\n     return {\"post_detail\": post}\r\n"
                },
                {
                    "date": 1663027223489,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,5 +54,6 @@\n def get_post(id:int, response: Response):\r\n     post = find_post(id)\r\n     if not post: \r\n         response.status_code = status.HTTP_404_NOT_FOUND\r\n+        return {'message': f\"post with id_: {id} was not found\"}\r\n     return {\"post_detail\": post}\r\n"
                },
                {
                    "date": 1663027232177,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,6 +54,6 @@\n def get_post(id:int, response: Response):\r\n     post = find_post(id)\r\n     if not post: \r\n         response.status_code = status.HTTP_404_NOT_FOUND\r\n-        return {'message': f\"post with id_: {id} was not found\"}\r\n+        return {'message': f\"post with id: {id} was not found\"}\r\n     return {\"post_detail\": post}\r\n"
                },
                {
                    "date": 1663027258637,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n from typing import Optional\r\n-from fastapi import FastAPI, Response, status\r\n+from fastapi import FastAPI, Response, status, HTTPException\r\n from fastapi.params import Body\r\n from pydantic import BaseModel\r\n from random import randrange\r\n \r\n"
                },
                {
                    "date": 1663027268657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,7 +53,7 @@\n @app.get(\"/posts/{id}\")\r\n def get_post(id:int, response: Response):\r\n     post = find_post(id)\r\n     if not post: \r\n-        response.status_code = status.HTTP_404_NOT_FOUND\r\n-        return {'message': f\"post with id: {id} was not found\"}\r\n+        #response.status_code = status.HTTP_404_NOT_FOUND\r\n+        #return {'message': f\"post with id: {id} was not found\"}\r\n     return {\"post_detail\": post}\r\n"
                },
                {
                    "date": 1663027318196,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,7 +53,9 @@\n @app.get(\"/posts/{id}\")\r\n def get_post(id:int, response: Response):\r\n     post = find_post(id)\r\n     if not post: \r\n+        raise HTTPException(status_code=status.HTTP_404_NOT_FOUND,\r\n+                            detail=f\"post with id: {id} was not found\")\r\n         #response.status_code = status.HTTP_404_NOT_FOUND\r\n         #return {'message': f\"post with id: {id} was not found\"}\r\n     return {\"post_detail\": post}\r\n"
                },
                {
                    "date": 1663027889362,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n async def get_posts():\r\n     return {\"data\": my_posts}\r\n \r\n \r\n-@app.post(\"/posts\")\r\n+@app.post(\"/posts\", status_code=status.HTTP_201_CREATED)\r\n def cpost(post: Post):\r\n     post_dict = post.dict()\r\n     post_dict['id'] = randrange(0, 10000000)\r\n     my_posts.append(post_dict)\r\n@@ -55,7 +55,5 @@\n     post = find_post(id)\r\n     if not post: \r\n         raise HTTPException(status_code=status.HTTP_404_NOT_FOUND,\r\n                             detail=f\"post with id: {id} was not found\")\r\n-        #response.status_code = status.HTTP_404_NOT_FOUND\r\n-        #return {'message': f\"post with id: {id} was not found\"}\r\n     return {\"post_detail\": post}\r\n"
                },
                {
                    "date": 1663027901717,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n     return {\"data\": my_posts}\r\n \r\n \r\n @app.post(\"/posts\", status_code=status.HTTP_201_CREATED)\r\n-def cpost(post: Post):\r\n+def create_post(post: Post):\r\n     post_dict = post.dict()\r\n     post_dict['id'] = randrange(0, 10000000)\r\n     my_posts.append(post_dict)\r\n     #print(post.dict())\r\n"
                },
                {
                    "date": 1663027995194,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,4 +56,9 @@\n     if not post: \r\n         raise HTTPException(status_code=status.HTTP_404_NOT_FOUND,\r\n                             detail=f\"post with id: {id} was not found\")\r\n     return {\"post_detail\": post}\r\n+\r\n+\r\n+@app.delete(\"/posts/{id}\")\r\n+def delete_post():\r\n+    #deleting post\r\n"
                },
                {
                    "date": 1663028012670,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,5 +60,6 @@\n \r\n \r\n @app.delete(\"/posts/{id}\")\r\n def delete_post():\r\n-    #deleting post\r\n+    # deleting post\r\n+\r\n"
                },
                {
                    "date": 1663028070884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,13 @@\n def find_post(id):\r\n     for p in my_posts:\r\n         if p[\"id\"] == id:\r\n             return p\r\n+ \r\n+\r\n+def find_index_post(id):\r\n+    for i, p in enumerate(my_posts) \r\n+        if p['id'] == id:\r\n         \r\n \r\n @app.get(\"/\")\r\n async def root():\r\n"
                },
                {
                    "date": 1663028083125,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,11 +24,11 @@\n             return p\r\n  \r\n \r\n def find_index_post(id):\r\n-    for i, p in enumerate(my_posts) \r\n+    for i, p in enumerate(my_posts):\r\n         if p['id'] == id:\r\n-        \r\n+            return i\r\n \r\n @app.get(\"/\")\r\n async def root():\r\n     return {\"message\": \"Python API\"}\r\n"
                },
                {
                    "date": 1663028099255,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,5 +66,6 @@\n \r\n @app.delete(\"/posts/{id}\")\r\n def delete_post():\r\n     # deleting post\r\n+    index = find_index_post(id)\r\n \r\n"
                },
                {
                    "date": 1663028129303,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,5 +67,8 @@\n @app.delete(\"/posts/{id}\")\r\n def delete_post():\r\n     # deleting post\r\n     index = find_index_post(id)\r\n+    \r\n+    my_posts.pop(index)\r\n+    return ('message': 'post was succesfully deleted')\r\n \r\n"
                },
                {
                    "date": 1663028149399,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,6 +69,6 @@\n     # deleting post\r\n     index = find_index_post(id)\r\n     \r\n     my_posts.pop(index)\r\n-    return ('message': 'post was succesfully deleted')\r\n+    return {'message': 'post was succesfully deleted'}\r\n \r\n"
                },
                {
                    "date": 1663028213068,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n     return {\"post_detail\": post}\r\n \r\n \r\n @app.delete(\"/posts/{id}\")\r\n-def delete_post():\r\n+def delete_post(id: int):\r\n     # deleting post\r\n     index = find_index_post(id)\r\n     \r\n     my_posts.pop(index)\r\n"
                },
                {
                    "date": 1663028313359,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n                             detail=f\"post with id: {id} was not found\")\r\n     return {\"post_detail\": post}\r\n \r\n \r\n-@app.delete(\"/posts/{id}\")\r\n+@app.delete(\"/posts/{id}\", status_code=status.HTTP_204_NO_CONTENT)\r\n def delete_post(id: int):\r\n     # deleting post\r\n     index = find_index_post(id)\r\n     \r\n"
                },
                {
                    "date": 1663028363310,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n from typing import Optional\r\n+from xml.dom import registerDOMImplementation\r\n from fastapi import FastAPI, Response, status, HTTPException\r\n from fastapi.params import Body\r\n from pydantic import BaseModel\r\n from random import randrange\r\n@@ -69,6 +70,6 @@\n     # deleting post\r\n     index = find_index_post(id)\r\n     \r\n     my_posts.pop(index)\r\n-    return {'message': 'post was succesfully deleted'}\r\n+    return Response(status_code=status.HTTP_204_NO_CONTENT)\r\n \r\n"
                },
                {
                    "date": 1663028430269,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,7 +69,10 @@\n def delete_post(id: int):\r\n     # deleting post\r\n     index = find_index_post(id)\r\n     \r\n+    if index == None:\r\n+        raise HTTPException(status_code=status.HTTP_404_NOT_FOUND, detail=f\"post with id: {id} does not exist\")\r\n+    \r\n     my_posts.pop(index)\r\n     return Response(status_code=status.HTTP_204_NO_CONTENT)\r\n \r\n"
                },
                {
                    "date": 1663028435895,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,10 @@\n     # deleting post\r\n     index = find_index_post(id)\r\n     \r\n     if index == None:\r\n-        raise HTTPException(status_code=status.HTTP_404_NOT_FOUND, detail=f\"post with id: {id} does not exist\")\r\n+        raise HTTPException(status_code=status.HTTP_404_NOT_FOUND, \r\n+                            detail=f\"post with id: {id} does not exist\")\r\n     \r\n     my_posts.pop(index)\r\n     return Response(status_code=status.HTTP_204_NO_CONTENT)\r\n \r\n"
                },
                {
                    "date": 1663028497082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,8 +28,9 @@\n def find_index_post(id):\r\n     for i, p in enumerate(my_posts):\r\n         if p['id'] == id:\r\n             return i\r\n+        \r\n \r\n @app.get(\"/\")\r\n async def root():\r\n     return {\"message\": \"Python API\"}\r\n@@ -76,4 +77,7 @@\n     \r\n     my_posts.pop(index)\r\n     return Response(status_code=status.HTTP_204_NO_CONTENT)\r\n \r\n+\r\n+\r\n+\r\n"
                },
                {
                    "date": 1663028528908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,6 +78,9 @@\n     my_posts.pop(index)\r\n     return Response(status_code=status.HTTP_204_NO_CONTENT)\r\n \r\n \r\n+@app.put(\"/posts/{id}\")\r\n+def update_post(id: int)\r\n \r\n \r\n+\r\n"
                },
                {
                    "date": 1663028555068,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,8 +79,10 @@\n     return Response(status_code=status.HTTP_204_NO_CONTENT)\r\n \r\n \r\n @app.put(\"/posts/{id}\")\r\n-def update_post(id: int)\r\n+def update_post(id: int):\r\n+    print(post)\r\n+    return {\"message\"}\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1663028574092,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,9 +80,15 @@\n \r\n \r\n @app.put(\"/posts/{id}\")\r\n def update_post(id: int):\r\n-    print(post)\r\n-    return {\"message\"}\r\n+    index = find_index_post(id)\r\n+    \r\n+    if index == None:\r\n+        raise HTTPException(status_code=status.HTTP_404_NOT_FOUND, \r\n+                            detail=f\"post with id: {id} does not exist\")\r\n+    \r\n+    my_posts.pop(index)\r\n+    return Response(status_code=status.HTTP_204_NO_CONTENT)\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1663028637065,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,16 +79,18 @@\n     return Response(status_code=status.HTTP_204_NO_CONTENT)\r\n \r\n \r\n @app.put(\"/posts/{id}\")\r\n-def update_post(id: int):\r\n+def update_post(id: int, post: Post):\r\n     index = find_index_post(id)\r\n     \r\n     if index == None:\r\n         raise HTTPException(status_code=status.HTTP_404_NOT_FOUND, \r\n                             detail=f\"post with id: {id} does not exist\")\r\n     \r\n-    my_posts.pop(index)\r\n+    post_dict = post.dict()\r\n+    post_dict['id'] = id\r\n+    my_posts[index] = post_dict\r\n     return Response(status_code=status.HTTP_204_NO_CONTENT)\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1663028772416,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n     return {\"post_detail\": post}\r\n \r\n \r\n @app.delete(\"/posts/{id}\", status_code=status.HTTP_204_NO_CONTENT)\r\n-def delete_post(id: int):\r\n+def delete_postwerqwer(id: int):\r\n     # deleting post\r\n     index = find_index_post(id)\r\n     \r\n     if index == None:\r\n"
                }
            ],
            "date": 1663018813305,
            "name": "Commit-0",
            "content": "from typing import Optional\r\nfrom fastapi import FastAPI\r\nfrom fastapi.params import Body\r\nfrom pydantic import BaseModel\r\n\r\napp = FastAPI()\r\n\r\n\r\nclass Post(BaseModel):\r\n    title: str\r\n    content: str\r\n    published: bool = True\r\n    rating: Optional[int] = None\r\n\r\n\r\nmy_posts = [{\"title\": \"title of post 1\", \"content\": \"content of post 1\", \"id\" : 1}, {\r\n\"title\": \"favorite foods\", \"content\": \"I like pizza\" , \"id\": 2}]\r\n\r\n@app.get(\"/\")\r\nasync def root():\r\n    return {\"message\": \"Python API\"}\r\n\r\n@app.get(\"/posts\")\r\nasync def root():\r\n    return {\"data\": my_posts}\r\n\r\n@app.post(\"/cpost\")\r\ndef cpost(post: Post):\r\n    print(post.dict())\r\n    return {\"data\": post}\r\n# title str, content str, category, Bool published"
        }
    ]
}